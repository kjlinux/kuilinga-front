// =================================================================
// # API SPECIFICATION TYPES
// # This file was auto-generated by an AI tool based on the OpenAPI specification.
// # Do not modify manually, as changes will be overwritten.
// =================================================================

// -----------------
// # Enums
// -----------------

export enum AttendanceType {
  In = "in",
  Out = "out",
}

export enum DeviceStatus {
  Online = "online",
  Offline = "offline",
  Maintenance = "maintenance",
}

export enum LeaveStatus {
  Pending = "pending",
  Approved = "approved",
  Rejected = "rejected",
  Cancelled = "cancelled",
}

export enum LeaveType {
  Annual = "annual",
  Sick = "sick",
  Maternity = "maternity",
  Paternity = "paternity",
  Unpaid = "unpaid",
  Other = "other",
}

export enum ReportFormat {
  PDF = "pdf",
  Excel = "excel",
  CSV = "csv",
}

export enum ReportPeriod {
  Daily = "daily",
  Weekly = "weekly",
  Monthly = "monthly",
  Custom = "custom",
}

export enum UserRole {
    SuperAdmin = "super-admin",
    AdminOrganization = "admin-organization",
    RH = "rh",
    Manager = "manager",
    Employee = "employee",
}

// -----------------
// # Schemas
// -----------------

export interface User {
  email: string;
  full_name?: string | null;
  phone_number?: string | null;
  organization_id?: string | null;
  id: string;
  is_active: boolean;
  is_superuser: boolean;
  roles: Role[];
}

export interface UserInLogin {
  id: string;
  full_name?: string | null;
  email: string;
  is_superuser: boolean;
  roles: Role[];
}

export interface Token {
  access_token: string;
  refresh_token: string;
  token_type: string;
  user: UserInLogin;
}

export interface RefreshTokenRequest {
  refresh_token: string;
}

export interface Role {
  name: string;
  description?: string | null;
  id: string;
  permissions: Permission[];
}

export interface Permission {
  name: string;
  description?: string | null;
  id: string;
}

export interface Organization {
  name: string;
  description?: string | null;
  email?: string | null;
  phone?: string | null;
  timezone: string;
  plan?: string | null;
  is_active: boolean;
  id: string;
  sites_count: number;
  employees_count: number;
  users_count: number;
}

export interface SiteOrganization {
  name: string;
  description?: string | null;
  email?: string | null;
  phone?: string | null;
  timezone: string;
  plan?: string | null;
  is_active: boolean;
  id: string;
}

export interface Site {
  name: string;
  address?: string | null;
  timezone: string;
  id: string;
  organization?: SiteOrganization | null;
  departments_count: number;
  employees_count: number;
  devices_count: number;
}

export interface DepartmentSite {
  id: string;
  name: string;
}

export interface DepartmentManager {
  id: string;
  first_name: string;
  last_name: string;
  full_name?: string | null;
}

export interface Department {
  name: string;
  id: string;
  site?: DepartmentSite | null;
  manager?: DepartmentManager | null;
  employees_count: number;
}

export interface EmployeeDepartment {
  name: string;
  id: string;
}

export interface EmployeeSite {
  name: string;
  address?: string | null;
  timezone: string;
  id: string;
}

export interface EmployeeOrganization {
  name: string;
  description?: string | null;
  email?: string | null;
  phone?: string | null;
  timezone: string;
  plan?: string | null;
  is_active: boolean;
  id: string;
}

export interface EmployeeUser {
  email: string;
  full_name?: string | null;
  phone_number?: string | null;
  organization_id?: string | null;
  id: string;
  is_active: boolean;
}

export interface Employee {
  first_name: string;
  last_name: string;
  email: string;
  phone?: string | null;
  employee_number?: string | null;
  position?: string | null;
  badge_id?: string | null;
  id: string;
  status: string;
  department?: EmployeeDepartment | null;
  site?: EmployeeSite | null;
  organization?: EmployeeOrganization | null;
  user?: EmployeeUser | null;
}

export interface DeviceOrganization {
  name: string;
  description?: string | null;
  email?: string | null;
  phone?: string | null;
  timezone: string;
  plan?: string | null;
  is_active: boolean;
  id: string;
}

export interface DeviceSite {
  name: string;
  address?: string | null;
  timezone: string;
  id: string;
}

export interface Device {
  serial_number: string;
  type: string;
  status: DeviceStatus;
  id: string;
  organization?: DeviceOrganization | null;
  site?: DeviceSite | null;
  last_attendance_timestamp?: string | null; // "date-time"
  daily_attendance_count: number;
}

export interface AttendanceEmployee {
  id: string;
  first_name: string;
  last_name: string;
  employee_number?: string | null;
}

export interface AttendanceDevice {
  id: string;
  serial_number: string;
  type: string;
}

export interface Attendance {
  timestamp: string; // "date-time"
  type: AttendanceType;
  geo?: string | null;
  extra_data?: Record<string, unknown> | null;
  id: string;
  duration?: string | null;
  employee?: AttendanceEmployee | null;
  device?: AttendanceDevice | null;
}

export interface LeaveDepartment {
  id: string;
  name: string;
}

export interface LeaveEmployee {
  id: string;
  first_name: string;
  last_name: string;
  department?: LeaveDepartment | null;
  full_name?: string | null;
}

export interface LeaveApprover {
  id: string;
  full_name?: string | null;
}

export interface Leave {
  leave_type: LeaveType;
  start_date: string; // "date"
  end_date: string; // "date"
  reason: string;
  notes?: string | null;
  id: string;
  status: LeaveStatus;
  duration: number;
  employee?: LeaveEmployee | null;
  approver?: LeaveApprover | null;
}

// -----------------
// # Create & Update Schemas
// -----------------

export interface UserCreate {
  email: string;
  full_name?: string | null;
  phone_number?: string | null;
  organization_id?: string | null;
  password: string;
}

export interface UserUpdate {
  email?: string | null;
  full_name?: string | null;
  phone_number?: string | null;
  password?: string | null;
  is_active?: boolean | null;
}

export interface OrganizationCreate {
  name: string;
  description?: string | null;
  email?: string | null;
  phone?: string | null;
  timezone?: string;
  plan?: string | null;
  is_active?: boolean;
}

export interface OrganizationUpdate {
  name?: string | null;
  description?: string | null;
  email?: string | null;
  phone?: string | null;
  timezone?: string | null;
  plan?: string | null;
  is_active?: boolean | null;
}

export interface EmployeeCreate {
  first_name: string;
  last_name: string;
  email: string;
  phone?: string | null;
  employee_number?: string | null;
  position?: string | null;
  badge_id?: string | null;
  organization_id: string;
  department_id?: string | null;
  site_id?: string | null;
  user_id?: string | null;
}

export interface DepartmentCreate {
  name: string;
  site_id: string;
  manager_id?: string | null;
}

export interface DepartmentUpdate {
  name?: string | null;
  manager_id?: string | null;
}

export interface SiteCreate {
  name: string;
  address?: string | null;
  timezone?: string;
  organization_id: string;
}

export interface SiteUpdate {
  name?: string | null;
  address?: string | null;
  timezone?: string | null;
}

export interface DeviceCreate {
  serial_number: string;
  type?: string;
  status?: DeviceStatus;
  organization_id: string;
  site_id?: string | null;
}

export interface DeviceUpdate {
  serial_number?: string | null;
  type?: string | null;
  status?: DeviceStatus | null;
  site_id?: string | null;
}

export interface AttendanceCreate {
  timestamp: string; // "date-time"
  type: AttendanceType;
  geo?: string | null;
  extra_data?: Record<string, unknown> | null;
  employee_id: string;
  device_id?: string | null;
}

export interface LeaveCreate {
  leave_type: LeaveType;
  start_date: string; // "date"
  end_date: string; // "date"
  reason: string;
  notes?: string | null;
  employee_id: string;
}

export interface LeaveUpdate {
  status: LeaveStatus;
  notes?: string | null;
}

export interface LoginCredentials {
  email: string;
  password: string;
}

export type AuthResponse = Token;

export interface RoleCreate {
  name: string;
  description?: string | null;
}

export interface RoleUpdate {
  name?: string | null;
  description?: string | null;
}

export interface PermissionCreate {
  name: string;
  description?: string | null;
}

export interface PermissionUpdate {
  name?: string | null;
  description?: string | null;
}

// -----------------
// # API Error & Validation
// -----------------

export interface ValidationError {
  loc: (string | number)[];
  msg: string;
  type: string;
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

// -----------------
// # Reporting & Misc
// -----------------

// --- Generic ---
export interface ReportRequestBase {
  format?: ReportFormat;
}

// --- R1: Multi-Org Consolidated ---
export interface MultiOrgConsolidatedRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  organization_ids?: string[] | null;
  metric_type: string;
  grouping: string;
}
export interface MultiOrgConsolidatedRow {
  organization_name: string;
  present_days: number;
  on_leave_days: number;
  total_hours_worked: number;
}
export interface MultiOrgConsolidatedResponse {
  period: string;
  data: MultiOrgConsolidatedRow[];
}

// --- R5: Organization Presence ---
export interface OrganizationPresenceRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  site_ids?: string[] | null;
  department_ids?: string[] | null;
}
export interface DepartmentPresenceReportRow {
  employee_id: string;
  employee_name: string;
  present_days: number;
  absent_days: number;
  on_leave_days: number;
  total_hours_worked: number;
}
export interface OrganizationPresenceResponse {
  organization_name: string;
  period: string;
  data: DepartmentPresenceReportRow[];
  summary: Record<string, unknown>;
}

// --- R6: Monthly Synthetic ---
export interface MonthlySyntheticReportRequest extends ReportRequestBase {
  year: number;
  month: number;
  site_ids?: string[] | null;
  department_ids?: string[] | null;
  include_overtime?: boolean;
}

// --- R7: Organization Leaves Analysis ---
export interface OrganizationLeavesRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  leave_type?: LeaveType | null;
  status?: LeaveStatus | null;
  department_ids?: string[] | null;
  employee_ids?: string[] | null;
}
export interface DepartmentLeaveReportRow {
    employee_name: string;
    start_date: string; // "date"
    end_date: string; // "date"
    leave_type: string;
    status: string;
    reason: string;
    total_days: number;
}
export interface DepartmentLeavesResponse {
    department_name: string;
    period: string;
    data: DepartmentLeaveReportRow[];
}

// --- R9: Worked Hours per Employee ---
export interface WorkedHoursRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  department_ids?: string[] | null;
  employee_ids?: string[] | null;
}
export interface WorkedHoursRow {
  employee_name: string;
  department_name?: string | null;
  date: string; // "date"
  status: string;
  check_in?: string | null;
  check_out?: string | null;
  total_hours: number;
}
export interface WorkedHoursResponse {
  organization_name: string;
  period: string;
  data: WorkedHoursRow[];
}

// --- R10: Site Activity Report ---
export interface SiteActivityRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  site_ids: string[];
  detailed?: boolean;
}
export interface SiteActivityRow {
  site_name: string;
  total_employees: number;
  present_employees: number;
  on_leave_employees: number;
  total_hours_worked: number;
  average_hours_per_employee: number;
}
export interface SiteActivityResponse {
  organization_name: string;
  period: string;
  data: SiteActivityRow[];
}

// --- R12: Department Presence Report ---
export interface DepartmentPresenceRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  employee_ids?: string[] | null;
  grouping?: string;
}
export interface DepartmentPresenceResponse {
  department_name: string;
  period: string;
  data: DepartmentPresenceReportRow[];
  summary: Record<string, unknown>;
}

// --- R13: Team Weekly Report ---
export interface TeamWeeklyReportRequest extends ReportRequestBase {
  year: number;
  week_number: number;
  detailed?: boolean;
}

// --- R15: Department Leave Requests ---
export interface DepartmentLeavesRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  leave_type?: LeaveType | null;
  status?: LeaveStatus | null;
  employee_ids?: string[] | null;
}

// --- R16: Team Performance Report ---
export interface TeamPerformanceRequest extends ReportRequestBase {
  year: number;
  month?: number | null;
  quarter?: number | null;
}
export interface TeamPerformanceRow {
  employee_id: string;
  employee_name: string;
  attendance_rate: number;
  total_hours_worked: number;
}
export interface TeamPerformanceResponse {
  department_name: string;
  period: string;
  data: TeamPerformanceRow[];
}

// --- R17: Employee Presence Report ---
export interface EmployeePresenceReportRequest extends ReportRequestBase {
  start_date: string; // "date"
  end_date: string; // "date"
  detailed?: boolean;
}
export interface EmployeePresenceReportRow {
  date: string; // "date"
  check_in?: string | null;
  check_out?: string | null;
  total_hours?: number | null;
  status: string;
}
export interface EmployeePresenceReportResponse {
  employee_name: string;
  employee_badge_id: string;
  department_name?: string | null;
  start_date: string; // "date"
  end_date: string; // "date"
  data: EmployeePresenceReportRow[];
  summary: Record<string, unknown>;
}

// --- R18: Employee Monthly Summary ---
export interface EmployeeMonthlySummaryRequest {
  year: number;
  month: number;
  include_charts?: boolean;
}
export interface EmployeeMonthlySummaryResponse {
  employee_name: string;
  employee_badge_id: string;
  department_name?: string | null;
  period: string;
  summary: Record<string, unknown>;
  daily_data: Record<string, unknown>[];
}

// --- R19: Employee Leaves Report ---
export interface EmployeeLeavesReportRequest extends ReportRequestBase {
  year: number;
  leave_type?: LeaveType | null;
  status?: LeaveStatus | null;
}
export interface EmployeeLeaveReportRow {
  start_date: string; // "date"
  end_date: string; // "date"
  leave_type: string;
  status: string;
  reason: string;
  total_days: number;
}
export interface EmployeeLeavesReportResponse {
  employee_name: string;
  year: number;
  data: EmployeeLeaveReportRow[];
  summary: Record<string, number>;
}

// --- R20: Presence Certificate ---
export interface PresenceCertificateRequest {
  start_date: string; // "date"
  end_date: string; // "date"
}

// -----------------
// # Pagination (Generic)
// -----------------

export interface PaginationParams {
  skip?: number;
  limit?: number;
  search?: string;
  sort_by?: string;
  sort_order?: "asc" | "desc";
}

export interface PaginatedResponse<T> {
  items: T[];
  total: number;
  skip: number;
  limit: number;
}

// -----------------
// # Dashboard Types
// -----------------

export interface UsersPerOrg {
  name: string;
  user_count: number;
}

export interface SitesPerOrg {
  name: string;
  site_count: number;
}

export interface DeviceStatusRatio {
  status: string;
  count: number;
}

export interface PlanDistribution {
  plan: string;
  count: number;
}

export interface Top10Organizations {
  name: string;
  employee_count: number;
}

export interface AdminDashboard {
  active_organizations: number;
  users_per_organization: UsersPerOrg[];
  sites_per_organization: SitesPerOrg[];
  device_status_ratio: DeviceStatusRatio[];
  daily_attendance_count: number;
  plan_distribution: PlanDistribution[];
  top_10_organizations_by_employees: Top10Organizations[];
}

export interface PresenceEvolution {
  date: string; // "date"
  presence_count: number;
}

export interface PresenceAbsenceTardinessDistribution {
  present: number;
  absent: number;
  tardy: number;
}

export interface ManagerDashboard {
  present_today: number;
  absent_today: number;
  tardy_today: number;
  attendance_rate: number;
  total_work_hours: number;
  pending_leaves: number;
  presence_evolution: PresenceEvolution[];
  presence_absence_tardiness_distribution: PresenceAbsenceTardinessDistribution;
  real_time_attendances: Attendance[];
}

export interface LeaveBalance {
  total: number;
  used: number;
  available: number;
}

export interface EmployeeDashboard {
  today_attendances: Attendance[];
  monthly_attendance_rate: number;
  leave_balance: LeaveBalance;
}

export interface AttendancePerDevice {
  serial_number: string;
  attendance_count: number;
}

export interface IntegratorDashboard {
  device_status_ratio: DeviceStatusRatio[];
  attendance_per_device: AttendancePerDevice[];
}

export interface TardinessByDay {
  day: string;
  tardy_count: number;
}

export interface AdvancedAnalytics {
  tardiness_by_day_of_week: TardinessByDay[];
}